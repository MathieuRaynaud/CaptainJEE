PRAGMA foreign_keys = ON;

CREATE TABLE IF NOT EXISTS boitier (
	id_boitier INTEGER PRIMARY KEY,
	nom text NOT NULL,
	consommation DOUBLE NOT NULL,
	etat_sous_disjoncteurs TEXT NOT NULL
);

CREATE TABLE IF NOT EXISTS boitier_primaire (
	id_boitier INTEGER PRIMARY KEY,
	FOREIGN KEY(id_boitier) REFERENCES boitier(id_boitier)
);

CREATE TABLE IF NOT EXISTS boitier_secondaire (
	id_boitier INTEGER PRIMARY KEY,
	FOREIGN KEY(id_boitier) REFERENCES boitier(id_boitier)
);

CREATE TABLE IF NOT EXISTS source (
	nom TEXT PRIMARY KEY,
	id_boitier INTEGER NOT NULL,
	utilisation DOUBLE NOT NULL,
	FOREIGN KEY(id_boitier) REFERENCES boitier_primaire(id_boitier)
) WITHOUT ROWID;

CREATE TABLE IF NOT EXISTS charge (
	numero_sortie_de_puissance INTEGER,
	id_boitier_secondaire INTEGER,
	nom TEXT,
	priorite INTEGER NOT NULL,
	calibre double NOT NULL,
	etat_actuel INTEGER NOT NULL,
	etat_par_defaut INTEGER NOT NULL,
	consommation DOUBLE NOT NULL,
	PRIMARY KEY(numero_sortie_de_puissance, id_boitier_secondaire)
) WITHOUT ROWID;

CREATE TABLE IF NOT EXISTS groupe_charges (
	id_groupe_charges INTEGER PRIMARY KEY,
	nom TEXT NOT NULL,
	etat TEXT NOT NULL, -- TODO: trigger pour gerer ça || directement en Java
	consommation DOUBLE NOT NULL
);

CREATE TABLE IF NOT EXISTS interrupteur (
	id_interrupteur INTEGER PRIMARY KEY,
	nom TEXT NOT NULL,
	numero_sortie_de_puissance INTEGER,
	id_boitier_secondaire INTEGER,
	id_groupe INTEGER,
	etat TEXT NOT NULL, -- TODO: trigger pour gerer ça || directement en Java
	FOREIGN KEY(numero_sortie_de_puissance, id_boitier_secondaire) REFERENCES charge(numero_sortie_de_puissance, id_boitier_secondaire)
);

CREATE TABLE IF NOT EXISTS interrupteur_physique (
	id_interrupteur INTEGER PRIMARY KEY,
	id_boitier_secondaire INTEGER,
	FOREIGN KEY(id_interrupteur) REFERENCES interrupteur(id_interrupteur),
	FOREIGN KEY(id_boitier_secondaire) REFERENCES boitier_secondaire(id_boitier_secondaire)
);

CREATE TABLE IF NOT EXISTS interrupteur_virtuel (
	id_interrupteur INTEGER PRIMARY KEY,
	FOREIGN KEY(id_interrupteur) REFERENCES interrupteur(id_interrupteur)
);

CREATE TABLE IF NOT EXISTS categorie (
	id_categorie INTEGER PRIMARY KEY,
	nom TEXT NOT NULL,
	consommation DOUBLE NOT NULL
);

CREATE TABLE IF NOT EXISTS fil (
	id_fil INTEGER PRIMARY KEY,
	etat TEXT NOT NULL,
	boitier_source INTEGER NOT NULL,
	boitier_dest INTEGER NOT NULL
);

CREATE TABLE IF NOT EXISTS consommation_heure (
	date DATE,
	numero_sortie_de_puissance INTEGER NOT NULL,
	id_boitier_secondaire INTEGER NOT NULL,
	conso_Wh_cumulee INTEGER NOT NULL,
	FOREIGN KEY(numero_sortie_de_puissance, id_boitier_secondaire) REFERENCES charge(numero_sortie_de_puissance, id_boitier_secondaire)
);

CREATE TABLE IF NOT EXISTS user (
	email TEXT PRIMARY KEY,
	privilege INTEGER NOT NULL,
	hash_password TEXT NOT NULL
) WITHOUT ROWID;



-- Tables d'association

CREATE TABLE IF NOT EXISTS categorie__charge (
	numero_sortie_de_puissance INTEGER,
	id_boitier_secondaire INTEGER,
	id_categorie INTEGER,
	FOREIGN KEY(numero_sortie_de_puissance, id_boitier_secondaire) REFERENCES charge(numero_sortie_de_puissance, id_boitier_secondaire),
	FOREIGN KEY(id_categorie) REFERENCES categorie(id_categorie),
	PRIMARY KEY(numero_sortie_de_puissance, id_boitier_secondaire, id_categorie)
) WITHOUT ROWID;

CREATE TABLE IF NOT EXISTS categorie__groupe (
	id_categorie INTEGER,
	id_groupe_charges INTEGER,
	FOREIGN KEY(id_categorie) REFERENCES categorie(id_categorie),
	FOREIGN KEY(id_groupe_charges) REFERENCES groupe_charges(id_groupe_charges),
	PRIMARY KEY(id_categorie, id_groupe_charges)
) WITHOUT ROWID;

CREATE TABLE IF NOT EXISTS categorie__interrupteur (
	id_categorie INTEGER,
	id_interrupteur INTEGER,
	FOREIGN KEY(id_categorie) REFERENCES categorie(id_categorie),
	FOREIGN KEY(id_interrupteur) REFERENCES interrupteur(id_interrupteur),
	PRIMARY KEY(id_categorie, id_interrupteur)
) WITHOUT ROWID;

CREATE TABLE IF NOT EXISTS groupe__groupe (
	id_groupe_source INTEGER,
	id_groupe_dest INTEGER,
	FOREIGN KEY(id_groupe_source) REFERENCES groupe_charges(id_groupe),
	FOREIGN KEY(id_groupe_dest) REFERENCES groupe_charges(id_groupe),
	PRIMARY KEY(id_groupe_source, id_groupe_dest)
);

CREATE TABLE IF NOT EXISTS charge__groupe_charges (
	numero_sortie_de_puissance INTEGER,
	id_boitier_secondaire INTEGER,
	id_groupe_charges INTEGER,
	FOREIGN KEY(numero_sortie_de_puissance, id_boitier_secondaire) REFERENCES charge(numero_sortie_de_puissance, id_boitier_secondaire),
	FOREIGN KEY(id_groupe_charges) REFERENCES groupe_charges(id_groupe_charges),
	PRIMARY KEY(numero_sortie_de_puissance, id_boitier_secondaire, id_groupe_charges)
);
